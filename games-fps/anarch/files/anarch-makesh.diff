--- a/make.sh	2020-11-22 00:36:36.784911973 +0100
+++ b/make.sh	2020-11-22 01:41:48.684723562 +0100
@@ -12,18 +12,16 @@
   exit 0
 fi
 
-clear; clear; 
+CFLAGS=${CFLAGS+'-x c -Wall -Wextra -fmax-errors=5 -pedantic -Wall -Wextra -Wno-unused-parameter -Wno-missing-field-initializers -o anarch'}
 
-C_FLAGS='-x c -Wall -Wextra -fmax-errors=5 -pedantic -O3 -Wall -Wextra -Wno-unused-parameter -Wno-missing-field-initializers -o anarch'
-
-COMPILER='g++'
+CC='g++'
 
 if [ $# -eq 2 ]; then
-  COMPILER=$2
+  CC=$2
 
   if [ $2 == "tcc" ]; then # you'll probably want to modify this
-    C_FLAGS="${C_FLAGS} -L/usr/lib/x86_64-linux-gnu/pulseaudio/ 
-      -I/home/tastyfish/git/tcc/tcc-0.9.27/include
+    CFLAGS="${CFLAGS} -L/usr/lib/x86_64-linux-gnu/pulseaudio/ 
+      -I/usr/lib64/tcc/include/
       -I/usr/lib/gcc/x86_64-linux-gnu/8/include/"
   fi
 fi
@@ -35,38 +33,38 @@
   # - g++
   # - SDL2 (dev) package
 
-  COMMAND="${COMPILER} ${C_FLAGS} main_sdl.c -lSDL2"
+  COMMAND="${CC} ${CFLAGS} main_sdl.c -lSDL2"
 
   echo ${COMMAND}
 
-  ${COMMAND} && ./anarch
+  ${COMMAND} 
 elif [ $1 == "terminal" ]; then
   # PC terminal build, requires:
   # - g++
 
-  COMMAND="${COMPILER} ${C_FLAGS} main_terminal.c"
+  COMMAND="${CC} ${CFLAGS} main_terminal.c"
 
   echo ${COMMAND}
 
-  ${COMMAND} && sudo ./anarch
+  ${COMMAND} 
 elif [ $1 == "csfml" ]; then
   # csfml build, requires:
   # - csfml
 
-  COMMAND="${COMPILER} ${C_FLAGS} main_csfml.c -lcsfml-graphics -lcsfml-window -lcsfml-system -lcsfml-audio"
+  COMMAND="${CC} ${CFLAGS} main_csfml.c -lcsfml-graphics -lcsfml-window -lcsfml-system -lcsfml-audio"
 
   echo ${COMMAND}
 
-  ${COMMAND} && ./anarch
+  ${COMMAND} 
 elif [ $1 == "test" ]; then
   # test build, requires:
   # - g++
 
-  COMMAND="${COMPILER} ${C_FLAGS} main_test.c"
+  COMMAND="${CC} ${CFLAGS} main_test.c"
 
   echo ${COMMAND}
 
-  ${COMMAND} && ./anarch
+  ${COMMAND} 
 elif [ $1 == "pokitto" ]; then
   # Pokitto build, requires:
   # - PokittoLib, in this folder create a symlink named "PokittoLib" to the 
