diff --git a/a/barva/__main__.py b/b/barva/__main__.py
index 2262377..cf45a51 100755
--- a/a/barva/__main__.py
+++ b/b/barva/__main__.py
@@ -5,12 +5,14 @@ from barva.visualizers.pulse import PulseHexVisualizer
 from barva.visualizers.pulse import PulseTerminalFireVisualizer
 from barva.visualizers.pulse import PulseTerminalsVisualizer
 from barva.visualizers.pulse import PulseTerminalVisualizer
+from barva.visualizers.pulse import PulseKeyboardVisualizer
 
 cmds = {
     "pulse-fire": PulseTerminalFireVisualizer,
     "pulse-hex": PulseHexVisualizer,
     "pulse-term": PulseTerminalVisualizer,
     "pulse-terms": PulseTerminalsVisualizer,
+    "pulse-kbd": PulseKeyboardVisualizer,
     "pulse-bspwm": PulseBspwmBordersVisualizer,
 }
 
diff --git a/b/barva/utils/keyboard.py b/b/barva/utils/keyboard.py
new file mode 100644
index 0000000..108cd28
--- /dev/null
+++ b/b/barva/utils/keyboard.py
@@ -0,0 +1,4 @@
+from barva.utils import color
+
+def define_backlight(r, g, b):
+    return color.to_hex(r, g, b).strip('#')
diff --git a/a/barva/visualizers/pulse.py b/b/barva/visualizers/pulse.py
index f1b4d11..8fb0c21 100644
--- a/a/barva/visualizers/pulse.py
+++ b/b/barva/visualizers/pulse.py
@@ -16,6 +16,7 @@ from numpy import sqrt
 from barva.sampling import SamplingRequirements
 from barva.utils import color
 from barva.utils import term
+from barva.utils import keyboard
 from barva.visualizer import Visualizer
 
 
@@ -99,6 +100,22 @@ class PulseTerminalsVisualizer(PulseRawVisualizer):
         self.to_all_terms(term.define_bg(*self.cfrom))
 
 
+class PulseKeyboardVisualizer(PulseRawVisualizer):
+    """Pulse the keyboard."""
+
+    @staticmethod
+
+    def to_keyboard(msg):
+        with open('/sys/class/leds/system76_acpi::kbd_backlight/color', "w") as kbd:
+            print(msg, file=kbd, end="", flush=True)
+
+    def __call__(self, samples):
+        self.to_keyboard(keyboard.define_backlight(*super().__call__(samples)))
+
+    def __exit__(self, etype, evalue, etrace):
+        self.to_keyboard(keyboard.define_backlight(*self.cfrom))
+
+
 class PulseTerminalFireVisualizer(PulseRawVisualizer):
     """Draw a fire-like animation."""
 
